plugins {
    id "io.github.pacifistmc.forgix" version "1.2.1"
}

forgix {
    // Documentation on how to configure Forgix can be found here
    // https://github.com/PacifistMC/Forgix#configuration

    group = "com.lowdragmc.shimmer"
    mergedJarName = "Shimmer-${project.minecraft_version}-${project.version}.${project.version_patch}.jar"
    outputDir = "artifacts"

    forge {
        projectName = "Forge"
    }

    fabric {
        projectName = "Fabric"
    }
}

subprojects {

    def version_base = "${project.version}"
    version = "${version_base}.${project.version_patch}"

    group = project.group

    // Jenkins - If needed in the future
    if (System.getenv('BUILD_NUMBER') != null) {
        version = version_base + "." + System.getenv('BUILD_NUMBER') + "d"
    }

    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    //java.withSourcesJar()
    //java.withJavadocJar()

    jar {
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestampe'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Build-On-Minecraft'      : minecraft_version
            ])
        }
    }

    repositories {
        mavenCentral()
        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            url 'https://cfa2.cursemaven.com'
        }
    }


    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    build.finalizedBy(mergeJars)
    assemble.finalizedBy(mergeJars)
}
